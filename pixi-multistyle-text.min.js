/**
 * @license
 * pixi-multistyle-text - v0.1.1
 * Copyright (c) 2014, Tommy Leunen <tommy.leunen@gmail.com> (http://tommyleunen.com/)
 * Released under the MIT license
 * See https://github.com/tleunen/pixi-multistyle-text for more details
 */
(function(){function a(a){a=a||{},a.font=a.font||"bold 20pt Arial",a.fill=a.fill||"black",a.stroke=a.stroke||"black",a.strokeThickness=a.strokeThickness||0,a.dropShadow=a.dropShadow||!1,a.dropShadowAngle=a.dropShadowAngle||Math.PI/6,a.dropShadowDistance=a.dropShadowDistance||4,a.dropShadowColor=a.dropShadowColor||"black"}var b=this,c=b.PIXI;if(c){var d=function(a,b,d){c.Text.call(this,a,d),this.setTextStyles(b)};d.prototype=Object.create(c.Text.prototype),d.prototype.constructor=d,d.prototype.setAlignmentStyle=d.prototype.setStyle=function(a){a=a||{},a.align=a.align||"left",a.wordWrap=a.wordWrap||!1,a.wordWrapWidth=a.wordWrapWidth||100,this.style=a,this.dirty=!0},d.prototype.setTextStyles=function(b){for(var c in b)b.hasOwnProperty(c)&&a(b[c]);b.def||(b.def={},a(b.def)),this.textStyles=b,this.dirty=!0},d.prototype._getTextDataPerLine=function(a){for(var b=[],c=/<\/?([a-z]+)>/g,d=this.textStyles.def,e=0;e<a.length;e++){for(var f,g=[],h=[];null!==(f=c.exec(a[e]))&&h.push(f););if(h.length){for(var i=0,j=0;j<h.length;j++)h[j].index>i&&g.push({text:a[e].substring(i,h[j].index),style:d}),d="/"==h[j][0][1]?this.textStyles.def:this.textStyles[h[j][1]]||this.textStyles.def,i=h[j].index+h[j][0].length;i<a[e].length&&g.push({text:a[e].substring(i),style:this.textStyles.def})}else g.push({text:a[e],style:d});b.push(g)}return b},d.prototype.updateText=function(){this.texture.baseTexture.resolution=this.resolution;var a,b,c=this.text,d=this.textStyles;this.style.wordWrap&&(c=this.wordWrap(this.text));var e=c.split(/(?:\r\n|\r|\n)/),f=this._getTextDataPerLine(e),g=[],h=[],i=0;for(a=0;a<e.length;a++){var j=0,k=0;for(b=0;b<f[a].length;b++)this.context.font=f[a][b].style.font,f[a][b].width=this.context.measureText(f[a][b].text).width,j+=f[a][b].width,f[a][b].fontProperties=this.determineFontProperties(f[a][b].style.font),k=Math.max(k,f[a][b].fontProperties.fontSize+f[a][b].style.strokeThickness);g[a]=j,h[a]=k,i=Math.max(i,j)}var l=Object.keys(d).map(function(a){return d[a]}),m=l.reduce(function(a,b){return Math.max(a,b.strokeThickness)},0),n=l.reduce(function(a,b){var c=b.dropShadow?b.dropShadowDistance:0;return Math.max(a,c)},0),o=i+m+n,p=Math.max.apply(null,h)*e.length+n;this.canvas.width=(o+this.context.lineWidth)*this.resolution,this.canvas.height=p*this.resolution,this.context.scale(this.resolution,this.resolution),navigator.isCocoonJS&&this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.context.textBaseline="alphabetic",this.context.lineJoin="round";var q,r;for(a=0;a<f.length;a++){var s=f[a];for(q=0,b=0;b<s.length;b++){var t=s[b].style,u=s[b].text,v=s[b].fontProperties;if(this.context.font=t.font,this.context.strokeStyle=t.stroke,this.context.lineWidth=t.strokeThickness,q+=m/2,r=m/2+a*h[a]+v.ascent,"right"===this.style.align?q+=i-g[a]:"center"===this.style.align&&(q+=(i-g[a])/2),t.dropShadow){this.context.fillStyle=t.dropShadowColor;var w=Math.sin(t.dropShadowAngle)*t.dropShadowDistance,x=Math.cos(t.dropShadowAngle)*t.dropShadowDistance;t.fill&&this.context.fillText(u,q+w,r+x)}this.context.fillStyle=t.fill,t.stroke&&t.strokeThickness&&this.context.strokeText(u,q,r),t.fill&&this.context.fillText(u,q,r),q+=s[b].width,q-=m/2}}this.updateTexture()},c.MultiStyleText=d}}).call(this);